#include "IOBase.h"
#include "IOBPitches.h"
#include "IOBplayer.h"
#include "tunes.h"

const int buzzer_pin = 5;
const int button_pin = 6;

IOBPlayer player(buzzer_pin);

IOBSequence melody_idle(IOBMUSIC(melody_IDLE));
IOBSequence melody_ready(IOBMUSIC(melody_READY));
IOBSequence melody_processing(IOBMUSIC(melody_PROCESSING));
IOBSequence melody_music1(IOBMUSIC(music1));
IOBSequence melody_music2(IOBMUSIC(music2));
IOBSequence melody_complete(IOBMUSIC(melody_COMPLETE));

void setup() {
  Serial.begin(115200);

  // set the digital pin as output:

  // player.setMusic(IOBMUSIC(music1));
  // player.setMusic(IOBMUSIC(music2));
  // player.setMusic(IOBMUSIC(underworld_melody));
  // player.setMusic(IOBMUSIC(melody_shaveAndAHairCut));
  // player.setMusic(IOBMUSIC(melody_READY));
  // player.setMusic(IOBMUSIC(melody_PROCESSING));
  // player.setMusic(IOBMUSIC(melody_COMPLETE));
  // player.setMusic(&melody_idle);
  Serial.println("Press button to play a tune");
}

int mcnt = 0;

void loop() {
  if (digitalRead(button_pin) && !player.isRunning()) {
    Serial.println("restart");
    mcnt = ++mcnt % 6;
    Serial.print("Start playing: ");
    switch (mcnt) {
      case 0:
        Serial.println("melody idle");
        player.setMusic(&melody_idle);
        break;
      case 1:
        Serial.println("melody ready");
        player.setMusic(&melody_ready);
        break;
      case 2:
        Serial.println("melody processing");
        player.setMusic(&melody_processing);
        break;
      case 3:
        Serial.println("melody music1");
        player.setMusic(&melody_music1);
        break;
      case 4:
        Serial.println("melody music2");
        player.setMusic(&melody_music2);
        break;
      case 5:
        Serial.println("melody complete");
        player.setMusic(&melody_complete);
        break;
    }
    player.restart();
  }

  IOBase::loopAll();
}